name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv add pylint
        uv sync
    - name: Analysing the code with pylint
      run: |
        uv run pylint $(git ls-files '*.py') --fail-under 4
  
  # deploy:
  #   env:
  #     IMAGE: ${{ vars.DOCKER_USER }}/mlops_formation:latest
  #   environment: mlops formation
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up docker
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install ca-certificates curl
  #       sudo install -m 0755 -d /etc/apt/keyrings
  #       sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  #       sudo chmod a+r /etc/apt/keyrings/docker.asc

  #       # Add the repository to Apt sources:
  #       echo \
  #         "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  #         $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  #         sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  #       sudo apt-get update
  #       sudo apt-get install docker-ce docker-ce-cli
    
    
  #   - name: build and push docker image
  #     run: |
  #       docker build -t $IMAGE .
  #   - name: push docker image on docker hub
  #     run: |
  #       docker login -u ${{ vars.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
  #       docker push $IMAGE

  train:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync

      - name: Start MLFLOW server
        run:
          nohup uv run mlflow server --host 0.0.0.0 --port 8081 &     
      - name: Train model
        env:
          MLFLOW_HOST: http://10.140.114.54
          MLFLOW_PORT: 8081
        run: |
          uv run python src/scripts/mlflow_trainer.py --n_estimators 100


  deploy:
    environment: mlops formation
    needs: train
    runs-on: ubuntu-latest
    steps:
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ vars.DOCKER_USER }}/mlops_formation-with_action:latest